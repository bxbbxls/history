@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --theme: 210 100% 52%;
    --background: 0 0% 95%;
    --background-full: 0 0% 100%;
    --foreground: 0 0% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;

    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;

    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;

    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;

    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;

    --radius: 0.5rem;
  }

  .dark {
    --theme: 210 100% 52%;
    --background: 0 0% 3.9%;
    --background-full: 0 0% 2%;
    --foreground: 0 0% 98%;

    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;

    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;

    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;

    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@font-face {
  src: url("../../public/assets/fonts/SFNS.woff2") format("woff2-variations");
  font-family: "SF Pro";
  font-style: normal;
}
@font-face {
  src: url("../../public/assets/fonts/SFNSItalic.woff2")
    format("woff2-variations");
  font-family: "SF Pro";
  font-style: italic;
}

@font-face {
  src: url("../../public/assets/fonts/SFNSRounded.woff2")
    format("woff2-variations");
  font-family: "SF Rounded";
  font-style: normal;
}

.SFPro {
  font-family: "SF Pro", sans-serif;
}

/* ------------------------------------------------------------------------ */

*::selection {
  background: hsl(var(--theme));
  color: hsl(var(--foreground));
}

input:focus-visible {
  outline: 2px solid hsl(var(--theme));
}

select:focus-visible {
  border: 2px dashed hsl(var(--theme));
  outline: none;
}

/* ------------------------------------------------------------------------ */

.blur-bg {
  bottom: 0;
  width: 500px;
  height: 75px;
  background: rgba(0, 0, 0, 0);
  -webkit-mask-image: radial-gradient(
    ellipse 100% 200% at 50% 100%,
    black 25%,
    transparent 50%
  );
  mask-image: radial-gradient(
    ellipse 100% 100% at 50% 50%,
    black 30%,
    transparent 50%
  );
  backdrop-filter: blur(2.5px);
  filter: grayscale(1);
}

.tooltip {
  stroke: hsl(var(--border));
  stroke-width: 2px;
  stroke-linecap: round;
}

/* ------------------------------------------------------------------------ */

.logo-button {
  box-shadow: inset 0 0 6px #0000001c;
}

.search-container {
  display: flex;
  width: 100%;
  gap: 0.5rem;
}

.dropdown-container {
  width: 100%;
  padding: 0.5rem;
  background: hsl(var(--background-full));
  border-radius: 20px;
  border: 1px solid;
  border-color: hsl(var(--border));
  margin-top: 0.5rem;
  & > ul > li {
    padding-inline: 0.5rem;
    padding-block: 0.25rem;
    border-radius: 7px;
    &:first-child {
      border-radius: 17px 17px 7px 7px;
    }
    &:last-child {
      border-radius: 7px 7px 17px 17px;
    }
    &:hover {
      background: hsl(var(--muted) / 0.6);
      color: white;
    }
  }
  & .link {
    display: flex;
    color: hsl(var(--muted-foreground));
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    align-items: center;
    gap: 0.25rem;
  }
}

/* ------------------------------------ */

.wiki-container {
  padding: 1.5rem;
  background: hsl(var(--background-full));
  border: hsl(var(--border)) 1px solid;
  box-shadow: 0 0 5px hsla(0, 0%, 0%, 0.05);
  width: 75vw;
  min-width: 10vw;
  border-radius: 20px;
  & h1 {
    font-size: 2rem;
    line-height: 2rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
  }
}

@media not all and (min-width: 768px) {
  .wiki-container {
    width: calc(100vw - 1rem);
  }
}

.topics-container {
  width: 100%;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 0.5rem;
  user-select: none;
  & .topics-container-item {
    background: hsl(var(--muted) / 0.6);
    color: hsl(var(--muted-foreground));
    border: hsl(var(--border)) 1px solid;
    border-radius: 10px;
    font-size: 0.875rem;
    padding-inline: 7px;
    padding-block: 2px;
  }
}

.details-container {
  margin-top: 1.5rem;
  display: flex;
  flex-direction: column;
  & > div {
    margin-bottom: 1rem;
    background: hsl(var(--muted) / 1);
    border: hsl(var(--border)) 1px solid;
    border-radius: 10px;
    padding: 0.75rem;
    &:last-child {
      margin-bottom: 0rem;
    }
  }
}

.details-title {
  font-size: 0.75rem;
  color: hsl(var(--muted-foreground));
  padding-bottom: 0.25rem;
  user-select: none;
}

@media (prefers-color-scheme: dark) {
  .details-container {
    & > div {
      background: hsl(var(--muted) / 0.5);
      border: hsl(var(--border)) 1px solid;
    }
  }
}

@keyframes move-up {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes move-right {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(20px);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes move-left {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(-20px);
  }
  100% {
    transform: translateX(0);
  }
}

.circle-404 {
  animation: rotate-scale 5s infinite;
  border-radius: 100px;
  z-index: -5;
  filter: blur(50px);
  position: absolute;
  left: 45%;
  top: 45%;
  width: 10rem;
  height: 10rem;
  & .animate-move-up {
    animation: move-up 3s infinite;
  }

  & .animate-move-right {
    animation: move-right 3s infinite;
  }

  & .animate-move-left {
    animation: move-left 3s infinite;
  }
}

@keyframes rotate-scale {
  0% {
    transform: rotate(calc(0deg + var(--rotate-offset, 0deg))) scale(1);
  }
  25% {
    transform: rotate(calc(5deg + var(--rotate-offset, 0deg))) scale(1.05);
  }
  50% {
    transform: rotate(calc(-5deg + var(--rotate-offset, 0deg))) scale(1.05);
  }
  100% {
    transform: rotate(calc(0deg + var(--rotate-offset, 0deg))) scale(1);
  }
}
